name: Run Robot Framework Tests

on: [push, pull_request]

jobs:
  e2e-tests:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install Chocolatey
      run: |
        # Install Chocolatey
        iex "& { $(irm https://chocolatey.org/install.ps1 -UseBasicP) }"

    - name: Install JRE 8u421
      run: |
        # Install JRE 8u421 using Chocolatey
        choco install jre8 --version 8.0.421 -y

    # - name: Download Firebird 2.5
    #   run: |
    #     # Download the Firebird 2.5 installer
    #     Invoke-WebRequest -Uri "https://sourceforge.net/projects/firebird/files/firebird-win32/2.5.5-Release/Firebird-2.5.5.26952_0_Win32.exe" -OutFile "Firebird-2.5.5.26952_0_Win32.exe"
    
    # - name: Verify Firebird Download
    #   run: |
    #     # Verify if the file was downloaded and its size
    #     $filePath = "Firebird-2.5.5.26952_0_Win32.exe"
        
    #     if (-Not (Test-Path $filePath)) {
    #       Write-Error "The file $filePath was not downloaded."
    #       exit 1
    #     }
        
    #     $expectedSize = 7004517  # Expected file size in bytes
    #     $actualSize = (Get-Item $filePath).Length
        
    #     if ($actualSize -ne $expectedSize) {
    #       Write-Error "The downloaded file size ($actualSize bytes) does not match the expected size ($expectedSize bytes)."
    #       exit 1
    #     }

    # - name: Install Firebird 2.5
    #   run: |
    #     # Install Firebird 2.5
    #     Start-Process -FilePath ".\Firebird-2.5.5.26952_0_Win32.exe" -ArgumentList "/SILENT" -NoNewWindow -Wait

    # - name: Verify Firebird Installation
    #   run: |
    #     # Verify if Firebird was installed correctly
    #     & "C:\Program Files\Firebird\Firebird_2_5\bin\isql.exe" -?  # Command to check installation

    - name: Copy WinAppDriver to Program Files
      run: |
        # Create the directory if it doesn't exist
        if (-not (Test-Path "C:\Program Files (x86)\Windows Application Driver")) {
          New-Item -ItemType Directory -Path "C:\Program Files (x86)\Windows Application Driver"
        }

        # Copy the WinAppDriver.exe to the destination directory
        Copy-Item -Path ".\WinAppDriver.exe" -Destination "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe"

    - name: Start WinAppDriver
      run: |
        # Start the WinAppDriver
        Start-Process "C:\Program Files (x86)\Windows Application Driver\WinAppDriver.exe" -ArgumentList "/background"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install robotframework
        pip install robotframework-databaselibrary
        pip install robotframework-appiumlibrary
        pip install robotframework-SikuliLibrary
        pip install robotframework-ApplicationLibrary
        pip install firebirdsql
        pip install psutil

    - name: Run Robot Framework Tests
      run: |
        robot --outputdir results .\tests

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: robot-test-results
        path: results/
